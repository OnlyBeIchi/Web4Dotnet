#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Web4dotnet.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="QuanlyLuat")]
	public partial class MydataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLuat(Luat instance);
    partial void UpdateLuat(Luat instance);
    partial void DeleteLuat(Luat instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    #endregion
		
		public MydataDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["QuanlyLuatConnectionString1"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public MydataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public MydataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Luat> Luats
		{
			get
			{
				return this.GetTable<Luat>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Luat")]
	public partial class Luat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Chuong;
		
		private string _NDChuong;
		
		private string _Muc;
		
		private string _NDMuc;
		
		private string _Dieu;
		
		private string _NDDieu;
		
		private string _Khoan;
		
		private string _NDKhoan;
		
		private string _MucPhatduoi;
		
		private string _MucPhattren;
		
		private string _Status;
		
		private string _QAQC;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnChuongChanging(string value);
    partial void OnChuongChanged();
    partial void OnNDChuongChanging(string value);
    partial void OnNDChuongChanged();
    partial void OnMucChanging(string value);
    partial void OnMucChanged();
    partial void OnNDMucChanging(string value);
    partial void OnNDMucChanged();
    partial void OnDieuChanging(string value);
    partial void OnDieuChanged();
    partial void OnNDDieuChanging(string value);
    partial void OnNDDieuChanged();
    partial void OnKhoanChanging(string value);
    partial void OnKhoanChanged();
    partial void OnNDKhoanChanging(string value);
    partial void OnNDKhoanChanged();
    partial void OnMucPhatduoiChanging(string value);
    partial void OnMucPhatduoiChanged();
    partial void OnMucPhattrenChanging(string value);
    partial void OnMucPhattrenChanged();
    partial void OnStatusChanging(string value);
    partial void OnStatusChanged();
    partial void OnQAQCChanging(string value);
    partial void OnQAQCChanged();
    #endregion
		
		public Luat()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Chuong", DbType="NVarChar(50)")]
		public string Chuong
		{
			get
			{
				return this._Chuong;
			}
			set
			{
				if ((this._Chuong != value))
				{
					this.OnChuongChanging(value);
					this.SendPropertyChanging();
					this._Chuong = value;
					this.SendPropertyChanged("Chuong");
					this.OnChuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDChuong", DbType="NVarChar(MAX)")]
		public string NDChuong
		{
			get
			{
				return this._NDChuong;
			}
			set
			{
				if ((this._NDChuong != value))
				{
					this.OnNDChuongChanging(value);
					this.SendPropertyChanging();
					this._NDChuong = value;
					this.SendPropertyChanged("NDChuong");
					this.OnNDChuongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Muc", DbType="NVarChar(50)")]
		public string Muc
		{
			get
			{
				return this._Muc;
			}
			set
			{
				if ((this._Muc != value))
				{
					this.OnMucChanging(value);
					this.SendPropertyChanging();
					this._Muc = value;
					this.SendPropertyChanged("Muc");
					this.OnMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDMuc", DbType="NVarChar(MAX)")]
		public string NDMuc
		{
			get
			{
				return this._NDMuc;
			}
			set
			{
				if ((this._NDMuc != value))
				{
					this.OnNDMucChanging(value);
					this.SendPropertyChanging();
					this._NDMuc = value;
					this.SendPropertyChanged("NDMuc");
					this.OnNDMucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dieu", DbType="NVarChar(50)")]
		public string Dieu
		{
			get
			{
				return this._Dieu;
			}
			set
			{
				if ((this._Dieu != value))
				{
					this.OnDieuChanging(value);
					this.SendPropertyChanging();
					this._Dieu = value;
					this.SendPropertyChanged("Dieu");
					this.OnDieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDDieu", DbType="NVarChar(MAX)")]
		public string NDDieu
		{
			get
			{
				return this._NDDieu;
			}
			set
			{
				if ((this._NDDieu != value))
				{
					this.OnNDDieuChanging(value);
					this.SendPropertyChanging();
					this._NDDieu = value;
					this.SendPropertyChanged("NDDieu");
					this.OnNDDieuChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Khoan", DbType="NVarChar(50)")]
		public string Khoan
		{
			get
			{
				return this._Khoan;
			}
			set
			{
				if ((this._Khoan != value))
				{
					this.OnKhoanChanging(value);
					this.SendPropertyChanging();
					this._Khoan = value;
					this.SendPropertyChanged("Khoan");
					this.OnKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NDKhoan", DbType="NVarChar(MAX)")]
		public string NDKhoan
		{
			get
			{
				return this._NDKhoan;
			}
			set
			{
				if ((this._NDKhoan != value))
				{
					this.OnNDKhoanChanging(value);
					this.SendPropertyChanging();
					this._NDKhoan = value;
					this.SendPropertyChanged("NDKhoan");
					this.OnNDKhoanChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucPhatduoi", DbType="NVarChar(MAX)")]
		public string MucPhatduoi
		{
			get
			{
				return this._MucPhatduoi;
			}
			set
			{
				if ((this._MucPhatduoi != value))
				{
					this.OnMucPhatduoiChanging(value);
					this.SendPropertyChanging();
					this._MucPhatduoi = value;
					this.SendPropertyChanged("MucPhatduoi");
					this.OnMucPhatduoiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MucPhattren", DbType="NVarChar(MAX)")]
		public string MucPhattren
		{
			get
			{
				return this._MucPhattren;
			}
			set
			{
				if ((this._MucPhattren != value))
				{
					this.OnMucPhattrenChanging(value);
					this.SendPropertyChanging();
					this._MucPhattren = value;
					this.SendPropertyChanged("MucPhattren");
					this.OnMucPhattrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="NVarChar(50)")]
		public string Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_QAQC", DbType="NVarChar(50)")]
		public string QAQC
		{
			get
			{
				return this._QAQC;
			}
			set
			{
				if ((this._QAQC != value))
				{
					this.OnQAQCChanging(value);
					this.SendPropertyChanging();
					this._QAQC = value;
					this.SendPropertyChanged("QAQC");
					this.OnQAQCChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _TenDangNhap;
		
		private string _MatKhau;
		
		private string _Quyen;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnTenDangNhapChanging(string value);
    partial void OnTenDangNhapChanged();
    partial void OnMatKhauChanging(string value);
    partial void OnMatKhauChanged();
    partial void OnQuyenChanging(string value);
    partial void OnQuyenChanged();
    #endregion
		
		public User()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TenDangNhap", DbType="NVarChar(50)")]
		public string TenDangNhap
		{
			get
			{
				return this._TenDangNhap;
			}
			set
			{
				if ((this._TenDangNhap != value))
				{
					this.OnTenDangNhapChanging(value);
					this.SendPropertyChanging();
					this._TenDangNhap = value;
					this.SendPropertyChanged("TenDangNhap");
					this.OnTenDangNhapChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MatKhau", DbType="NVarChar(50)")]
		public string MatKhau
		{
			get
			{
				return this._MatKhau;
			}
			set
			{
				if ((this._MatKhau != value))
				{
					this.OnMatKhauChanging(value);
					this.SendPropertyChanging();
					this._MatKhau = value;
					this.SendPropertyChanged("MatKhau");
					this.OnMatKhauChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quyen", DbType="NVarChar(50)")]
		public string Quyen
		{
			get
			{
				return this._Quyen;
			}
			set
			{
				if ((this._Quyen != value))
				{
					this.OnQuyenChanging(value);
					this.SendPropertyChanging();
					this._Quyen = value;
					this.SendPropertyChanged("Quyen");
					this.OnQuyenChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
